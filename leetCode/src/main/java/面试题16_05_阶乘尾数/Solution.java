package 面试题16_05_阶乘尾数;

/**
 * 智力题：有多少个 10就有多少个 0，而 10 = 2 * 5，又因为 2 的个数多于 5 的个数，所以 n! 可分解成多少个 5，尾数就有多少个 0
 * n! = 1 * 2 * 3 * 4 * (1 * 5) * ... * (2 * 5) * ... * (3 * 5) ...
 * 每隔 5 个数就会出现 一个 5，因此我们只需要通过 n / 5 来计算存在存在多少个 5 个数，那么就对应的存在多少个 5
 * 每隔 25 个数会出现 一个 25， 而 25 存在 两个 5，我们上面只计算了 25 的一个 5，因此我们需要 n / 25 来计算存在多少个 25，加上它遗漏的 5
 * 每隔 125 个数会出现一个 125，而 125 存在 三个 5，我们上面只计算了 125 的两个 5，因此我们需要 n / 125 来计算存在多少个 125，加上它遗漏的 5
 * 因此 count = n / 5 + n / 25 + n / 125 + ...
 *  我们这样进行循环
 *  *         n /= 5;
 *  *         count += n;
 *  这样，第一次加上的就是 每隔 5 个数的 5 的个数，第二次加上的就是 每隔 25 个数的 5 的个数 ...
 * 
 * 
 * 设计一个算法，算出 n 阶乘有多少个尾随零。
 * 说明: 你算法的时间复杂度应为 O(log n) 。
 * 
 * https://leetcode.cn/problems/tic-tac-toe-lcci/description/
 * 
 * @author lujinpeng
 * @date 2024-07-30 16:11
 */
class Solution {
    public int trailingZeroes(int n) {
        int fiveCount = 0;

        while (n >= 5) {
            n /= 5;
            fiveCount += n;
        }

        return fiveCount;
    }
}
